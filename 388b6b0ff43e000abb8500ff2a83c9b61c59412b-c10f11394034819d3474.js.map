{"version":3,"sources":["webpack:///./node_modules/graphql/jsutils/devAssert.mjs","webpack:///./node_modules/graphql/jsutils/defineToJSON.mjs","webpack:///./node_modules/graphql/jsutils/isObjectLike.mjs","webpack:///./node_modules/graphql/language/location.mjs","webpack:///./node_modules/graphql/language/printLocation.mjs","webpack:///./node_modules/graphql/error/GraphQLError.mjs","webpack:///./node_modules/graphql/error/syntaxError.mjs","webpack:///./node_modules/graphql/language/source.mjs","webpack:///./node_modules/graphql/jsutils/defineToStringTag.mjs","webpack:///./node_modules/graphql/language/tokenKind.mjs","webpack:///./node_modules/graphql/language/lexer.mjs","webpack:///./node_modules/graphql/language/directiveLocation.mjs","webpack:///./node_modules/graphql/language/parser.mjs","webpack:///./node_modules/graphql-tag/src/index.js","webpack:///./node_modules/@apollo/react-hooks/lib/react-hooks.esm.js"],"names":["devAssert","condition","message","Boolean","Error","defineToJSON","classObject","fn","arguments","length","undefined","prototype","toString","toJSON","inspect","nodejsCustomInspectSymbol","_typeof","obj","Symbol","iterator","constructor","getLocation","source","position","match","lineRegexp","line","column","exec","body","index","printLocation","location","printSourceLocation","start","sourceLocation","firstLineColumnOffset","locationOffset","whitespace","lineIndex","lineOffset","lineNum","columnOffset","columnNum","locationStr","concat","name","lines","split","locationLine","sublineIndex","Math","floor","sublineColumnNum","sublines","i","push","slice","printPrefixedLines","map","subline","existingLines","filter","_ref","padLen","max","apply","_ref2","_ref3","str","prefix","join","len","Array","GraphQLError","nodes","positions","path","originalError","extensions","_nodes","isArray","_source","node","loc","_locations","_positions","reduce","list","pos","value","_extensions","originalExtensions","Object","defineProperties","this","enumerable","writable","locations","stack","defineProperty","configurable","captureStackTrace","syntaxError","description","create","error","output","_i2","_error$nodes2","_i4","_error$locations2","printError","toStringTag","get","TokenKind","freeze","SOF","EOF","BANG","DOLLAR","AMP","PAREN_L","PAREN_R","SPREAD","COLON","EQUALS","AT","BRACKET_L","BRACKET_R","BRACE_L","PIPE","BRACE_R","NAME","INT","FLOAT","STRING","BLOCK_STRING","COMMENT","advanceLexer","lastToken","token","lookahead","kind","next","readToken","Tok","end","prev","printCharCode","code","isNaN","JSON","stringify","String","fromCharCode","toUpperCase","lexer","bodyLength","startPosition","charCodeAt","lineStart","positionAfterWhitespace","col","readComment","readName","firstCode","isFloat","readDigits","readNumber","chunkStart","rawValue","readBlockString","charCode","a","b","c","d","char2hex","invalidSequence","readString","unexpectedCharacterMessage","DirectiveLocation","QUERY","MUTATION","SUBSCRIPTION","FIELD","FRAGMENT_DEFINITION","FRAGMENT_SPREAD","INLINE_FRAGMENT","VARIABLE_DEFINITION","SCHEMA","SCALAR","OBJECT","FIELD_DEFINITION","ARGUMENT_DEFINITION","INTERFACE","UNION","ENUM","ENUM_VALUE","INPUT_OBJECT","INPUT_FIELD_DEFINITION","parse","options","parseDocument","parseValue","parser","expectToken","parseValueLiteral","parseType","type","parseTypeReference","Parser","sourceObj","_lexer","startOfFileToken","advance","createLexer","_options","_proto","parseName","DOCUMENT","definitions","many","parseDefinition","peek","parseOperationDefinition","parseFragmentDefinition","parseTypeSystemDefinition","parseTypeSystemExtension","peekDescription","unexpected","OPERATION_DEFINITION","operation","variableDefinitions","directives","selectionSet","parseSelectionSet","parseOperationType","parseVariableDefinitions","parseDirectives","operationToken","optionalMany","parseVariableDefinition","variable","parseVariable","defaultValue","expectOptionalToken","VARIABLE","SELECTION_SET","selections","parseSelection","parseFragment","parseField","alias","nameOrAlias","parseArguments","isConst","item","parseConstArgument","parseArgument","ARGUMENT","hasTypeCondition","expectOptionalKeyword","parseFragmentName","typeCondition","parseNamedType","expectKeyword","experimentalFragmentVariables","parseList","parseObject","parseStringLiteral","BOOLEAN","NULL","block","_this","LIST","values","any","_this2","fields","parseObjectField","OBJECT_FIELD","parseDirective","DIRECTIVE","LIST_TYPE","NON_NULL_TYPE","NAMED_TYPE","keywordToken","parseSchemaDefinition","parseScalarTypeDefinition","parseObjectTypeDefinition","parseInterfaceTypeDefinition","parseUnionTypeDefinition","parseEnumTypeDefinition","parseInputObjectTypeDefinition","parseDirectiveDefinition","parseDescription","operationTypes","parseOperationTypeDefinition","SCHEMA_DEFINITION","OPERATION_TYPE_DEFINITION","SCALAR_TYPE_DEFINITION","interfaces","parseImplementsInterfaces","parseFieldsDefinition","OBJECT_TYPE_DEFINITION","types","allowLegacySDLImplementsInterfaces","allowLegacySDLEmptyFields","parseFieldDefinition","args","parseArgumentDefs","parseInputValueDef","INPUT_VALUE_DEFINITION","INTERFACE_TYPE_DEFINITION","parseUnionMemberTypes","UNION_TYPE_DEFINITION","parseEnumValuesDefinition","ENUM_TYPE_DEFINITION","parseEnumValueDefinition","ENUM_VALUE_DEFINITION","parseInputFieldsDefinition","INPUT_OBJECT_TYPE_DEFINITION","parseSchemaExtension","parseScalarTypeExtension","parseObjectTypeExtension","parseInterfaceTypeExtension","parseUnionTypeExtension","parseEnumTypeExtension","parseInputObjectTypeExtension","SCHEMA_EXTENSION","SCALAR_TYPE_EXTENSION","OBJECT_TYPE_EXTENSION","INTERFACE_TYPE_EXTENSION","UNION_TYPE_EXTENSION","ENUM_TYPE_EXTENSION","INPUT_OBJECT_TYPE_EXTENSION","repeatable","parseDirectiveLocations","DIRECTIVE_DEFINITION","parseDirectiveLocation","startToken","noLocation","Loc","getTokenDesc","atToken","openKind","parseFn","closeKind","call","endToken","normalize","string","replace","trim","docCache","fragmentSourceMap","printFragmentWarnings","doc","cacheKey","parsed","stripLoc","removeLocAtThisLevel","docType","key","valueType","keys","hasOwnProperty","ast","astFragmentMap","fragmentDefinition","fragmentName","sourceKey","substring","console","warn","processFragments","gql","literals","result","resetCaches","disableFragmentWarnings","enableExperimentalFragmentVariables","disableExperimentalFragmentVariables","module","exports","OperationData","context","isMounted","previousOptions","getOptions","setOptions","newOptions","storePrevious","unmount","refreshClient","client","isNew","cleanup","verifyDocumentType","document","_super","QueryData","_a","onNewData","previousData","currentObservable","runLazy","runLazyQuery","lazyOptions","getExecuteResult","getQueryResult","startQuerySubscription","obsRefetch","variables","query","refetch","obsFetchMore","fetchMoreOptions","fetchMore","obsUpdateQuery","mapFn","updateQuery","obsStartPolling","pollInterval","startPolling","obsStopPolling","stopPolling","obsSubscribeToMore","subscribeToMore","execute","skip","removeQuerySubscription","updateObservableQuery","getExecuteSsrResult","executeLazy","loading","networkStatus","ready","called","data","fetchData","ssr","obs","getCurrentResult","afterExecute","_b","lazy","handleErrorOrCompleted","bind","ssrInitiated","renderPromises","ssrDisabled","fetchDisabled","disableNetworkFetches","ssrLoading","stale","observableQueryFields","addQueryPromise","prepareObservableQueryOptions","Query","displayName","fetchPolicy","metadata","reactComponent","initializeObservableQuery","getSSRObservable","observableQueryOptions","children","watchQuery","registerSSRObservable","newObservableQueryOptions","subscription","obsQuery","subscribe","previousResult","_error","resubscribeToQuery","lastError","getLastError","lastResult","getLastResult","resetLastResults","assign","currentResult","partial","errors","graphQLErrors","partialRefetch","resetQueryStoreErrors","onCompleted","onError","unsubscribe","MutationData","setResult","runMutation","mutationFunctionOptions","onMutationStart","mutationId","generateNewMutationId","mutate","then","response","onMutationCompleted","onMutationError","mutation","Mutation","mostRecentMutationId","optimisticResponse","update","mutationContext","_c","awaitRefetchQueries","mutateOptions","mutateVariables","refetchQueries","ignoreResults","updateResult","isMostRecentMutation","useMutation","updatedOptions","mutationDataRef","mutationData","current","SubscriptionData","initialize","getLoadingResult","shouldResubscribe","startSubscription","endSubscription","updateCurrentData","updateError","complete","completeSubscription","onSubscriptionData","subscriptionData","onSubscriptionComplete","useSubscription","subscriptionDataRef","RenderPromises","queryPromises","Map","queryInfoTrie","observable","props","lookupQueryInfo","queryInstance","finish","seen","set","Promise","resolve","hasPromises","size","consumeAndAwaitPromises","promises","forEach","promise","clear","all","varMap","has","variablesString","info"],"mappings":"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","file":"388b6b0ff43e000abb8500ff2a83c9b61c59412b-c10f11394034819d3474.js","sourcesContent":["export default function devAssert(condition, message) {\n  var booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}","import \"core-js/modules/es6.date.to-json\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nimport nodejsCustomInspectSymbol from './nodejsCustomInspectSymbol';\n/**\n * The `defineToJSON()` function defines toJSON() and inspect() prototype\n * methods, if no function provided they become aliases for toString().\n */\n\nexport default function defineToJSON(classObject) {\n  var fn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : classObject.prototype.toString;\n  classObject.prototype.toJSON = fn;\n  classObject.prototype.inspect = fn;\n\n  if (nodejsCustomInspectSymbol) {\n    classObject.prototype[nodejsCustomInspectSymbol] = fn;\n  }\n}","import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\n\n\nexport default function isObjectLike(value) {\n  return _typeof(value) == 'object' && value !== null;\n}","/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  var lineRegexp = /\\r\\n|[\\n\\r]/g;\n  var line = 1;\n  var column = position + 1;\n  var match;\n\n  while ((match = lineRegexp.exec(source.body)) && match.index < position) {\n    line += 1;\n    column = position + 1 - (match.index + match[0].length);\n  }\n\n  return {\n    line: line,\n    column: column\n  };\n}","import \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.function.name\";\nimport { getLocation } from '../language/location';\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printLocation(location) {\n  return printSourceLocation(location.source, getLocation(location.source, location.start));\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  var firstLineColumnOffset = source.locationOffset.column - 1;\n  var body = whitespace(firstLineColumnOffset) + source.body;\n  var lineIndex = sourceLocation.line - 1;\n  var lineOffset = source.locationOffset.line - 1;\n  var lineNum = sourceLocation.line + lineOffset;\n  var columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  var columnNum = sourceLocation.column + columnOffset;\n  var locationStr = \"\".concat(source.name, \":\").concat(lineNum, \":\").concat(columnNum, \"\\n\");\n  var lines = body.split(/\\r\\n|[\\n\\r]/g);\n  var locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    var sublineIndex = Math.floor(columnNum / 80);\n    var sublineColumnNum = columnNum % 80;\n    var sublines = [];\n\n    for (var i = 0; i < locationLine.length; i += 80) {\n      sublines.push(locationLine.slice(i, i + 80));\n    }\n\n    return locationStr + printPrefixedLines([[\"\".concat(lineNum), sublines[0]]].concat(sublines.slice(1, sublineIndex + 1).map(function (subline) {\n      return ['', subline];\n    }), [[' ', whitespace(sublineColumnNum - 1) + '^'], ['', sublines[sublineIndex + 1]]]));\n  }\n\n  return locationStr + printPrefixedLines([// Lines specified like this: [\"prefix\", \"string\"],\n  [\"\".concat(lineNum - 1), lines[lineIndex - 1]], [\"\".concat(lineNum), locationLine], ['', whitespace(columnNum - 1) + '^'], [\"\".concat(lineNum + 1), lines[lineIndex + 1]]]);\n}\n\nfunction printPrefixedLines(lines) {\n  var existingLines = lines.filter(function (_ref) {\n    var _ = _ref[0],\n        line = _ref[1];\n    return line !== undefined;\n  });\n  var padLen = Math.max.apply(Math, existingLines.map(function (_ref2) {\n    var prefix = _ref2[0];\n    return prefix.length;\n  }));\n  return existingLines.map(function (_ref3) {\n    var prefix = _ref3[0],\n        line = _ref3[1];\n    return lpad(padLen, prefix) + (line ? ' | ' + line : ' |');\n  }).join('\\n');\n}\n\nfunction whitespace(len) {\n  return Array(len + 1).join(' ');\n}\n\nfunction lpad(len, str) {\n  return whitespace(len - str.length) + str;\n}","import \"core-js/modules/es6.object.create\";\nimport \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.array.reduce\";\nimport \"core-js/modules/es6.array.is-array\";\nimport isObjectLike from '../jsutils/isObjectLike';\nimport { getLocation } from '../language/location';\nimport { printLocation, printSourceLocation } from '../language/printLocation';\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nexport function GraphQLError( // eslint-disable-line no-redeclare\nmessage, nodes, source, positions, path, originalError, extensions) {\n  // Compute list of blame nodes.\n  var _nodes = Array.isArray(nodes) ? nodes.length !== 0 ? nodes : undefined : nodes ? [nodes] : undefined; // Compute locations in the source for the given nodes/positions.\n\n\n  var _source = source;\n\n  if (!_source && _nodes) {\n    var node = _nodes[0];\n    _source = node && node.loc && node.loc.source;\n  }\n\n  var _positions = positions;\n\n  if (!_positions && _nodes) {\n    _positions = _nodes.reduce(function (list, node) {\n      if (node.loc) {\n        list.push(node.loc.start);\n      }\n\n      return list;\n    }, []);\n  }\n\n  if (_positions && _positions.length === 0) {\n    _positions = undefined;\n  }\n\n  var _locations;\n\n  if (positions && source) {\n    _locations = positions.map(function (pos) {\n      return getLocation(source, pos);\n    });\n  } else if (_nodes) {\n    _locations = _nodes.reduce(function (list, node) {\n      if (node.loc) {\n        list.push(getLocation(node.loc.source, node.loc.start));\n      }\n\n      return list;\n    }, []);\n  }\n\n  var _extensions = extensions;\n\n  if (_extensions == null && originalError != null) {\n    var originalExtensions = originalError.extensions;\n\n    if (isObjectLike(originalExtensions)) {\n      _extensions = originalExtensions;\n    }\n  }\n\n  Object.defineProperties(this, {\n    message: {\n      value: message,\n      // By being enumerable, JSON.stringify will include `message` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: true,\n      writable: true\n    },\n    locations: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: _locations || undefined,\n      // By being enumerable, JSON.stringify will include `locations` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: Boolean(_locations)\n    },\n    path: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: path || undefined,\n      // By being enumerable, JSON.stringify will include `path` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: Boolean(path)\n    },\n    nodes: {\n      value: _nodes || undefined\n    },\n    source: {\n      value: _source || undefined\n    },\n    positions: {\n      value: _positions || undefined\n    },\n    originalError: {\n      value: originalError\n    },\n    extensions: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: _extensions || undefined,\n      // By being enumerable, JSON.stringify will include `path` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: Boolean(_extensions)\n    }\n  }); // Include (non-enumerable) stack trace.\n\n  if (originalError && originalError.stack) {\n    Object.defineProperty(this, 'stack', {\n      value: originalError.stack,\n      writable: true,\n      configurable: true\n    });\n  } else if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, GraphQLError);\n  } else {\n    Object.defineProperty(this, 'stack', {\n      value: Error().stack,\n      writable: true,\n      configurable: true\n    });\n  }\n}\nGraphQLError.prototype = Object.create(Error.prototype, {\n  constructor: {\n    value: GraphQLError\n  },\n  name: {\n    value: 'GraphQLError'\n  },\n  toString: {\n    value: function toString() {\n      return printError(this);\n    }\n  }\n});\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n */\n\nexport function printError(error) {\n  var output = error.message;\n\n  if (error.nodes) {\n    for (var _i2 = 0, _error$nodes2 = error.nodes; _i2 < _error$nodes2.length; _i2++) {\n      var node = _error$nodes2[_i2];\n\n      if (node.loc) {\n        output += '\\n\\n' + printLocation(node.loc);\n      }\n    }\n  } else if (error.source && error.locations) {\n    for (var _i4 = 0, _error$locations2 = error.locations; _i4 < _error$locations2.length; _i4++) {\n      var location = _error$locations2[_i4];\n      output += '\\n\\n' + printSourceLocation(error.source, location);\n    }\n  }\n\n  return output;\n}","import { GraphQLError } from './GraphQLError';\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n\nexport function syntaxError(source, position, description) {\n  return new GraphQLError(\"Syntax Error: \".concat(description), undefined, source, [position]);\n}","import \"core-js/modules/es6.function.name\";\nimport devAssert from '../jsutils/devAssert';\nimport defineToStringTag from '../jsutils/defineToStringTag';\n/**\n * A representation of source input to GraphQL.\n * `name` and `locationOffset` are optional. They are useful for clients who\n * store GraphQL documents in source files; for example, if the GraphQL input\n * starts at line 40 in a file named Foo.graphql, it might be useful for name to\n * be \"Foo.graphql\" and location to be `{ line: 40, column: 0 }`.\n * line and column in locationOffset are 1-indexed\n */\n\nexport var Source = function Source(body, name, locationOffset) {\n  this.body = body;\n  this.name = name || 'GraphQL request';\n  this.locationOffset = locationOffset || {\n    line: 1,\n    column: 1\n  };\n  this.locationOffset.line > 0 || devAssert(0, 'line in locationOffset is 1-indexed and must be positive');\n  this.locationOffset.column > 0 || devAssert(0, 'column in locationOffset is 1-indexed and must be positive');\n}; // Conditionally apply `[Symbol.toStringTag]` if `Symbol`s are supported\n\ndefineToStringTag(Source);","import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\n\n/**\n * The `defineToStringTag()` function checks first to see if the runtime\n * supports the `Symbol` class and then if the `Symbol.toStringTag` constant\n * is defined as a `Symbol` instance. If both conditions are met, the\n * Symbol.toStringTag property is defined as a getter that returns the\n * supplied class constructor's name.\n *\n * @method defineToStringTag\n *\n * @param {Class<any>} classObject a class such as Object, String, Number but\n * typically one of your own creation through the class keyword; `class A {}`,\n * for example.\n */\nexport default function defineToStringTag(classObject) {\n  if (typeof Symbol === 'function' && Symbol.toStringTag) {\n    Object.defineProperty(classObject.prototype, Symbol.toStringTag, {\n      get: function get() {\n        return this.constructor.name;\n      }\n    });\n  }\n}","import \"core-js/modules/es6.object.freeze\";\n\n/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nexport var TokenKind = Object.freeze({\n  SOF: '<SOF>',\n  EOF: '<EOF>',\n  BANG: '!',\n  DOLLAR: '$',\n  AMP: '&',\n  PAREN_L: '(',\n  PAREN_R: ')',\n  SPREAD: '...',\n  COLON: ':',\n  EQUALS: '=',\n  AT: '@',\n  BRACKET_L: '[',\n  BRACKET_R: ']',\n  BRACE_L: '{',\n  PIPE: '|',\n  BRACE_R: '}',\n  NAME: 'Name',\n  INT: 'Int',\n  FLOAT: 'Float',\n  STRING: 'String',\n  BLOCK_STRING: 'BlockString',\n  COMMENT: 'Comment'\n});\n/**\n * The enum type representing the token kinds values.\n */","import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nimport defineToJSON from '../jsutils/defineToJSON';\nimport { syntaxError } from '../error/syntaxError';\nimport { dedentBlockStringValue } from './blockString';\nimport { TokenKind } from './tokenKind';\n/**\n * Given a Source object, this returns a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n\nexport function createLexer(source, options) {\n  var startOfFileToken = new Tok(TokenKind.SOF, 0, 0, 0, 0, null);\n  var lexer = {\n    source: source,\n    options: options,\n    lastToken: startOfFileToken,\n    token: startOfFileToken,\n    line: 1,\n    lineStart: 0,\n    advance: advanceLexer,\n    lookahead: lookahead\n  };\n  return lexer;\n}\n\nfunction advanceLexer() {\n  this.lastToken = this.token;\n  var token = this.token = this.lookahead();\n  return token;\n}\n\nfunction lookahead() {\n  var token = this.token;\n\n  if (token.kind !== TokenKind.EOF) {\n    do {\n      // Note: next is only mutable during parsing, so we cast to allow this.\n      token = token.next || (token.next = readToken(this, token));\n    } while (token.kind === TokenKind.COMMENT);\n  }\n\n  return token;\n}\n/**\n * The return type of createLexer.\n */\n// @internal\n\n\nexport function isPunctuatorToken(token) {\n  var kind = token.kind;\n  return kind === TokenKind.BANG || kind === TokenKind.DOLLAR || kind === TokenKind.AMP || kind === TokenKind.PAREN_L || kind === TokenKind.PAREN_R || kind === TokenKind.SPREAD || kind === TokenKind.COLON || kind === TokenKind.EQUALS || kind === TokenKind.AT || kind === TokenKind.BRACKET_L || kind === TokenKind.BRACKET_R || kind === TokenKind.BRACE_L || kind === TokenKind.PIPE || kind === TokenKind.BRACE_R;\n}\n/**\n * Helper function for constructing the Token object.\n */\n\nfunction Tok(kind, start, end, line, column, prev, value) {\n  this.kind = kind;\n  this.start = start;\n  this.end = end;\n  this.line = line;\n  this.column = column;\n  this.value = value;\n  this.prev = prev;\n  this.next = null;\n} // Print a simplified form when appearing in JSON/util.inspect.\n\n\ndefineToJSON(Tok, function () {\n  return {\n    kind: this.kind,\n    value: this.value,\n    line: this.line,\n    column: this.column\n  };\n});\n\nfunction printCharCode(code) {\n  return (// NaN/undefined represents access beyond the end of the file.\n    isNaN(code) ? TokenKind.EOF : // Trust JSON for ASCII.\n    code < 0x007f ? JSON.stringify(String.fromCharCode(code)) : // Otherwise print the escaped form.\n    \"\\\"\\\\u\".concat(('00' + code.toString(16).toUpperCase()).slice(-4), \"\\\"\")\n  );\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\n\nfunction readToken(lexer, prev) {\n  var source = lexer.source;\n  var body = source.body;\n  var bodyLength = body.length;\n  var pos = positionAfterWhitespace(body, prev.end, lexer);\n  var line = lexer.line;\n  var col = 1 + pos - lexer.lineStart;\n\n  if (pos >= bodyLength) {\n    return new Tok(TokenKind.EOF, bodyLength, bodyLength, line, col, prev);\n  }\n\n  var code = body.charCodeAt(pos); // SourceCharacter\n\n  switch (code) {\n    // !\n    case 33:\n      return new Tok(TokenKind.BANG, pos, pos + 1, line, col, prev);\n    // #\n\n    case 35:\n      return readComment(source, pos, line, col, prev);\n    // $\n\n    case 36:\n      return new Tok(TokenKind.DOLLAR, pos, pos + 1, line, col, prev);\n    // &\n\n    case 38:\n      return new Tok(TokenKind.AMP, pos, pos + 1, line, col, prev);\n    // (\n\n    case 40:\n      return new Tok(TokenKind.PAREN_L, pos, pos + 1, line, col, prev);\n    // )\n\n    case 41:\n      return new Tok(TokenKind.PAREN_R, pos, pos + 1, line, col, prev);\n    // .\n\n    case 46:\n      if (body.charCodeAt(pos + 1) === 46 && body.charCodeAt(pos + 2) === 46) {\n        return new Tok(TokenKind.SPREAD, pos, pos + 3, line, col, prev);\n      }\n\n      break;\n    // :\n\n    case 58:\n      return new Tok(TokenKind.COLON, pos, pos + 1, line, col, prev);\n    // =\n\n    case 61:\n      return new Tok(TokenKind.EQUALS, pos, pos + 1, line, col, prev);\n    // @\n\n    case 64:\n      return new Tok(TokenKind.AT, pos, pos + 1, line, col, prev);\n    // [\n\n    case 91:\n      return new Tok(TokenKind.BRACKET_L, pos, pos + 1, line, col, prev);\n    // ]\n\n    case 93:\n      return new Tok(TokenKind.BRACKET_R, pos, pos + 1, line, col, prev);\n    // {\n\n    case 123:\n      return new Tok(TokenKind.BRACE_L, pos, pos + 1, line, col, prev);\n    // |\n\n    case 124:\n      return new Tok(TokenKind.PIPE, pos, pos + 1, line, col, prev);\n    // }\n\n    case 125:\n      return new Tok(TokenKind.BRACE_R, pos, pos + 1, line, col, prev);\n    // A-Z _ a-z\n\n    case 65:\n    case 66:\n    case 67:\n    case 68:\n    case 69:\n    case 70:\n    case 71:\n    case 72:\n    case 73:\n    case 74:\n    case 75:\n    case 76:\n    case 77:\n    case 78:\n    case 79:\n    case 80:\n    case 81:\n    case 82:\n    case 83:\n    case 84:\n    case 85:\n    case 86:\n    case 87:\n    case 88:\n    case 89:\n    case 90:\n    case 95:\n    case 97:\n    case 98:\n    case 99:\n    case 100:\n    case 101:\n    case 102:\n    case 103:\n    case 104:\n    case 105:\n    case 106:\n    case 107:\n    case 108:\n    case 109:\n    case 110:\n    case 111:\n    case 112:\n    case 113:\n    case 114:\n    case 115:\n    case 116:\n    case 117:\n    case 118:\n    case 119:\n    case 120:\n    case 121:\n    case 122:\n      return readName(source, pos, line, col, prev);\n    // - 0-9\n\n    case 45:\n    case 48:\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      return readNumber(source, pos, code, line, col, prev);\n    // \"\n\n    case 34:\n      if (body.charCodeAt(pos + 1) === 34 && body.charCodeAt(pos + 2) === 34) {\n        return readBlockString(source, pos, line, col, prev, lexer);\n      }\n\n      return readString(source, pos, line, col, prev);\n  }\n\n  throw syntaxError(source, pos, unexpectedCharacterMessage(code));\n}\n/**\n * Report a message that an unexpected character was encountered.\n */\n\n\nfunction unexpectedCharacterMessage(code) {\n  if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n    return \"Cannot contain the invalid character \".concat(printCharCode(code), \".\");\n  }\n\n  if (code === 39) {\n    // '\n    return 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?';\n  }\n\n  return \"Cannot parse the unexpected character \".concat(printCharCode(code), \".\");\n}\n/**\n * Reads from body starting at startPosition until it finds a non-whitespace\n * character, then returns the position of that character for lexing.\n */\n\n\nfunction positionAfterWhitespace(body, startPosition, lexer) {\n  var bodyLength = body.length;\n  var position = startPosition;\n\n  while (position < bodyLength) {\n    var code = body.charCodeAt(position); // tab | space | comma | BOM\n\n    if (code === 9 || code === 32 || code === 44 || code === 0xfeff) {\n      ++position;\n    } else if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else {\n      break;\n    }\n  }\n\n  return position;\n}\n/**\n * Reads a comment token from the source file.\n *\n * #[\\u0009\\u0020-\\uFFFF]*\n */\n\n\nfunction readComment(source, start, line, col, prev) {\n  var body = source.body;\n  var code;\n  var position = start;\n\n  do {\n    code = body.charCodeAt(++position);\n  } while (!isNaN(code) && ( // SourceCharacter but not LineTerminator\n  code > 0x001f || code === 0x0009));\n\n  return new Tok(TokenKind.COMMENT, start, position, line, col, prev, body.slice(start + 1, position));\n}\n/**\n * Reads a number token from the source file, either a float\n * or an int depending on whether a decimal point appears.\n *\n * Int:   -?(0|[1-9][0-9]*)\n * Float: -?(0|[1-9][0-9]*)(\\.[0-9]+)?((E|e)(+|-)?[0-9]+)?\n */\n\n\nfunction readNumber(source, start, firstCode, line, col, prev) {\n  var body = source.body;\n  var code = firstCode;\n  var position = start;\n  var isFloat = false;\n\n  if (code === 45) {\n    // -\n    code = body.charCodeAt(++position);\n  }\n\n  if (code === 48) {\n    // 0\n    code = body.charCodeAt(++position);\n\n    if (code >= 48 && code <= 57) {\n      throw syntaxError(source, position, \"Invalid number, unexpected digit after 0: \".concat(printCharCode(code), \".\"));\n    }\n  } else {\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 46) {\n    // .\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 69 || code === 101) {\n    // E e\n    isFloat = true;\n    code = body.charCodeAt(++position);\n\n    if (code === 43 || code === 45) {\n      // + -\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or e\n\n\n  if (code === 46 || code === 69 || code === 101) {\n    throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n  }\n\n  return new Tok(isFloat ? TokenKind.FLOAT : TokenKind.INT, start, position, line, col, prev, body.slice(start, position));\n}\n/**\n * Returns the new position in the source after reading digits.\n */\n\n\nfunction readDigits(source, start, firstCode) {\n  var body = source.body;\n  var position = start;\n  var code = firstCode;\n\n  if (code >= 48 && code <= 57) {\n    // 0 - 9\n    do {\n      code = body.charCodeAt(++position);\n    } while (code >= 48 && code <= 57); // 0 - 9\n\n\n    return position;\n  }\n\n  throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n}\n/**\n * Reads a string token from the source file.\n *\n * \"([^\"\\\\\\u000A\\u000D]|(\\\\(u[0-9a-fA-F]{4}|[\"\\\\/bfnrt])))*\"\n */\n\n\nfunction readString(source, start, line, col, prev) {\n  var body = source.body;\n  var position = start + 1;\n  var chunkStart = position;\n  var code = 0;\n  var value = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position)) && // not LineTerminator\n  code !== 0x000a && code !== 0x000d) {\n    // Closing Quote (\")\n    if (code === 34) {\n      value += body.slice(chunkStart, position);\n      return new Tok(TokenKind.STRING, start, position + 1, line, col, prev, value);\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    ++position;\n\n    if (code === 92) {\n      // \\\n      value += body.slice(chunkStart, position - 1);\n      code = body.charCodeAt(position);\n\n      switch (code) {\n        case 34:\n          value += '\"';\n          break;\n\n        case 47:\n          value += '/';\n          break;\n\n        case 92:\n          value += '\\\\';\n          break;\n\n        case 98:\n          value += '\\b';\n          break;\n\n        case 102:\n          value += '\\f';\n          break;\n\n        case 110:\n          value += '\\n';\n          break;\n\n        case 114:\n          value += '\\r';\n          break;\n\n        case 116:\n          value += '\\t';\n          break;\n\n        case 117:\n          {\n            // uXXXX\n            var charCode = uniCharCode(body.charCodeAt(position + 1), body.charCodeAt(position + 2), body.charCodeAt(position + 3), body.charCodeAt(position + 4));\n\n            if (charCode < 0) {\n              var invalidSequence = body.slice(position + 1, position + 5);\n              throw syntaxError(source, position, \"Invalid character escape sequence: \\\\u\".concat(invalidSequence, \".\"));\n            }\n\n            value += String.fromCharCode(charCode);\n            position += 4;\n            break;\n          }\n\n        default:\n          throw syntaxError(source, position, \"Invalid character escape sequence: \\\\\".concat(String.fromCharCode(code), \".\"));\n      }\n\n      ++position;\n      chunkStart = position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Reads a block string token from the source file.\n *\n * \"\"\"(\"?\"?(\\\\\"\"\"|\\\\(?!=\"\"\")|[^\"\\\\]))*\"\"\"\n */\n\n\nfunction readBlockString(source, start, line, col, prev, lexer) {\n  var body = source.body;\n  var position = start + 3;\n  var chunkStart = position;\n  var code = 0;\n  var rawValue = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position))) {\n    // Closing Triple-Quote (\"\"\")\n    if (code === 34 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34) {\n      rawValue += body.slice(chunkStart, position);\n      return new Tok(TokenKind.BLOCK_STRING, start, position + 3, line, col, prev, dedentBlockStringValue(rawValue));\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if ( // Escape Triple-Quote (\\\"\"\")\n    code === 92 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34 && body.charCodeAt(position + 3) === 34) {\n      rawValue += body.slice(chunkStart, position) + '\"\"\"';\n      position += 4;\n      chunkStart = position;\n    } else {\n      ++position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Converts four hexadecimal chars to the integer that the\n * string represents. For example, uniCharCode('0','0','0','f')\n * will return 15, and uniCharCode('0','0','f','f') returns 255.\n *\n * Returns a negative number on error, if a char was invalid.\n *\n * This is implemented by noting that char2hex() returns -1 on error,\n * which means the result of ORing the char2hex() will also be negative.\n */\n\n\nfunction uniCharCode(a, b, c, d) {\n  return char2hex(a) << 12 | char2hex(b) << 8 | char2hex(c) << 4 | char2hex(d);\n}\n/**\n * Converts a hex character to its integer value.\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 on error.\n */\n\n\nfunction char2hex(a) {\n  return a >= 48 && a <= 57 ? a - 48 // 0-9\n  : a >= 65 && a <= 70 ? a - 55 // A-F\n  : a >= 97 && a <= 102 ? a - 87 // a-f\n  : -1;\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * [_A-Za-z][_0-9A-Za-z]*\n */\n\n\nfunction readName(source, start, line, col, prev) {\n  var body = source.body;\n  var bodyLength = body.length;\n  var position = start + 1;\n  var code = 0;\n\n  while (position !== bodyLength && !isNaN(code = body.charCodeAt(position)) && (code === 95 || // _\n  code >= 48 && code <= 57 || // 0-9\n  code >= 65 && code <= 90 || // A-Z\n  code >= 97 && code <= 122) // a-z\n  ) {\n    ++position;\n  }\n\n  return new Tok(TokenKind.NAME, start, position, line, col, prev, body.slice(start, position));\n}","import \"core-js/modules/es6.object.freeze\";\n\n/**\n * The set of allowed directive location values.\n */\nexport var DirectiveLocation = Object.freeze({\n  // Request Definitions\n  QUERY: 'QUERY',\n  MUTATION: 'MUTATION',\n  SUBSCRIPTION: 'SUBSCRIPTION',\n  FIELD: 'FIELD',\n  FRAGMENT_DEFINITION: 'FRAGMENT_DEFINITION',\n  FRAGMENT_SPREAD: 'FRAGMENT_SPREAD',\n  INLINE_FRAGMENT: 'INLINE_FRAGMENT',\n  VARIABLE_DEFINITION: 'VARIABLE_DEFINITION',\n  // Type System Definitions\n  SCHEMA: 'SCHEMA',\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  FIELD_DEFINITION: 'FIELD_DEFINITION',\n  ARGUMENT_DEFINITION: 'ARGUMENT_DEFINITION',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  ENUM_VALUE: 'ENUM_VALUE',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  INPUT_FIELD_DEFINITION: 'INPUT_FIELD_DEFINITION'\n});\n/**\n * The enum type representing the directive location values.\n */","import inspect from '../jsutils/inspect';\nimport devAssert from '../jsutils/devAssert';\nimport defineToJSON from '../jsutils/defineToJSON';\nimport { syntaxError } from '../error/syntaxError';\nimport { Kind } from './kinds';\nimport { Source } from './source';\nimport { createLexer } from './lexer';\nimport { DirectiveLocation } from './directiveLocation';\nimport { TokenKind } from './tokenKind';\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\n\nexport function parse(source, options) {\n  var parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nexport function parseValue(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var value = parser.parseValueLiteral(false);\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nexport function parseType(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var type = parser.parseTypeReference();\n  parser.expectToken(TokenKind.EOF);\n  return type;\n}\n\nvar Parser = /*#__PURE__*/function () {\n  function Parser(source, options) {\n    var sourceObj = typeof source === 'string' ? new Source(source) : source;\n    sourceObj instanceof Source || devAssert(0, \"Must provide Source. Received: \".concat(inspect(sourceObj)));\n    this._lexer = createLexer(sourceObj);\n    this._options = options || {};\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n\n  var _proto = Parser.prototype;\n\n  _proto.parseName = function parseName() {\n    var token = this.expectToken(TokenKind.NAME);\n    return {\n      kind: Kind.NAME,\n      value: token.value,\n      loc: this.loc(token)\n    };\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n  ;\n\n  _proto.parseDocument = function parseDocument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.DOCUMENT,\n      definitions: this.many(TokenKind.SOF, this.parseDefinition, TokenKind.EOF),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   */\n  ;\n\n  _proto.parseDefinition = function parseDefinition() {\n    if (this.peek(TokenKind.NAME)) {\n      switch (this._lexer.token.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'schema':\n        case 'scalar':\n        case 'type':\n        case 'interface':\n        case 'union':\n        case 'enum':\n        case 'input':\n        case 'directive':\n          return this.parseTypeSystemDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    } else if (this.peek(TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } else if (this.peekDescription()) {\n      return this.parseTypeSystemDefinition();\n    }\n\n    throw this.unexpected();\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseOperationDefinition = function parseOperationDefinition() {\n    var start = this._lexer.token;\n\n    if (this.peek(TokenKind.BRACE_L)) {\n      return {\n        kind: Kind.OPERATION_DEFINITION,\n        operation: 'query',\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    var operation = this.parseOperationType();\n    var name;\n\n    if (this.peek(TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return {\n      kind: Kind.OPERATION_DEFINITION,\n      operation: operation,\n      name: name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n  ;\n\n  _proto.parseOperationType = function parseOperationType() {\n    var operationToken = this.expectToken(TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return 'query';\n\n      case 'mutation':\n        return 'mutation';\n\n      case 'subscription':\n        return 'subscription';\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n  ;\n\n  _proto.parseVariableDefinitions = function parseVariableDefinitions() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseVariableDefinition, TokenKind.PAREN_R);\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseVariableDefinition = function parseVariableDefinition() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type: (this.expectToken(TokenKind.COLON), this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(TokenKind.EQUALS) ? this.parseValueLiteral(true) : undefined,\n      directives: this.parseDirectives(true),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Variable : $ Name\n   */\n  ;\n\n  _proto.parseVariable = function parseVariable() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.DOLLAR);\n    return {\n      kind: Kind.VARIABLE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * SelectionSet : { Selection+ }\n   */\n  ;\n\n  _proto.parseSelectionSet = function parseSelectionSet() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.SELECTION_SET,\n      selections: this.many(TokenKind.BRACE_L, this.parseSelection, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n  ;\n\n  _proto.parseSelection = function parseSelection() {\n    return this.peek(TokenKind.SPREAD) ? this.parseFragment() : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n  ;\n\n  _proto.parseField = function parseField() {\n    var start = this._lexer.token;\n    var nameOrAlias = this.parseName();\n    var alias;\n    var name;\n\n    if (this.expectOptionalToken(TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return {\n      kind: Kind.FIELD,\n      alias: alias,\n      name: name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(TokenKind.BRACE_L) ? this.parseSelectionSet() : undefined,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n  ;\n\n  _proto.parseArguments = function parseArguments(isConst) {\n    var item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(TokenKind.PAREN_L, item, TokenKind.PAREN_R);\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseArgument = function parseArgument() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.ARGUMENT,\n      name: name,\n      value: this.parseValueLiteral(false),\n      loc: this.loc(start)\n    };\n  };\n\n  _proto.parseConstArgument = function parseConstArgument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.ARGUMENT,\n      name: this.parseName(),\n      value: (this.expectToken(TokenKind.COLON), this.parseValueLiteral(true)),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseFragment = function parseFragment() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.SPREAD);\n    var hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(TokenKind.NAME)) {\n      return {\n        kind: Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n  ;\n\n  _proto.parseFragmentDefinition = function parseFragmentDefinition() {\n    var start = this._lexer.token;\n    this.expectKeyword('fragment'); // Experimental support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (this._options.experimentalFragmentVariables) {\n      return {\n        kind: Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n  ;\n\n  _proto.parseFragmentName = function parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n  ;\n\n  _proto.parseValueLiteral = function parseValueLiteral(isConst) {\n    var token = this._lexer.token;\n\n    switch (token.kind) {\n      case TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case TokenKind.INT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.INT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.FLOAT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.FLOAT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.STRING:\n      case TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case TokenKind.NAME:\n        if (token.value === 'true' || token.value === 'false') {\n          this._lexer.advance();\n\n          return {\n            kind: Kind.BOOLEAN,\n            value: token.value === 'true',\n            loc: this.loc(token)\n          };\n        } else if (token.value === 'null') {\n          this._lexer.advance();\n\n          return {\n            kind: Kind.NULL,\n            loc: this.loc(token)\n          };\n        }\n\n        this._lexer.advance();\n\n        return {\n          kind: Kind.ENUM,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.DOLLAR:\n        if (!isConst) {\n          return this.parseVariable();\n        }\n\n        break;\n    }\n\n    throw this.unexpected();\n  };\n\n  _proto.parseStringLiteral = function parseStringLiteral() {\n    var token = this._lexer.token;\n\n    this._lexer.advance();\n\n    return {\n      kind: Kind.STRING,\n      value: token.value,\n      block: token.kind === TokenKind.BLOCK_STRING,\n      loc: this.loc(token)\n    };\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n  ;\n\n  _proto.parseList = function parseList(isConst) {\n    var _this = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this.parseValueLiteral(isConst);\n    };\n\n    return {\n      kind: Kind.LIST,\n      values: this.any(TokenKind.BRACKET_L, item, TokenKind.BRACKET_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   */\n  ;\n\n  _proto.parseObject = function parseObject(isConst) {\n    var _this2 = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this2.parseObjectField(isConst);\n    };\n\n    return {\n      kind: Kind.OBJECT,\n      fields: this.any(TokenKind.BRACE_L, item, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseObjectField = function parseObjectField(isConst) {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.OBJECT_FIELD,\n      name: name,\n      value: this.parseValueLiteral(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n  ;\n\n  _proto.parseDirectives = function parseDirectives(isConst) {\n    var directives = [];\n\n    while (this.peek(TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n  /**\n   * Directive[Const] : @ Name Arguments[?Const]?\n   */\n  ;\n\n  _proto.parseDirective = function parseDirective(isConst) {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.AT);\n    return {\n      kind: Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n  ;\n\n  _proto.parseTypeReference = function parseTypeReference() {\n    var start = this._lexer.token;\n    var type;\n\n    if (this.expectOptionalToken(TokenKind.BRACKET_L)) {\n      type = this.parseTypeReference();\n      this.expectToken(TokenKind.BRACKET_R);\n      type = {\n        kind: Kind.LIST_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(TokenKind.BANG)) {\n      return {\n        kind: Kind.NON_NULL_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n  ;\n\n  _proto.parseNamedType = function parseNamedType() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.NAMED_TYPE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Type Definition section.\n\n  /**\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemDefinition = function parseTypeSystemDefinition() {\n    // Many definitions begin with a description and require a lookahead.\n    var keywordToken = this.peekDescription() ? this._lexer.lookahead() : this._lexer.token;\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  };\n\n  _proto.peekDescription = function peekDescription() {\n    return this.peek(TokenKind.STRING) || this.peek(TokenKind.BLOCK_STRING);\n  }\n  /**\n   * Description : StringValue\n   */\n  ;\n\n  _proto.parseDescription = function parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * SchemaDefinition : schema Directives[Const]? { OperationTypeDefinition+ }\n   */\n  ;\n\n  _proto.parseSchemaDefinition = function parseSchemaDefinition() {\n    var start = this._lexer.token;\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.many(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n    return {\n      kind: Kind.SCHEMA_DEFINITION,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n  ;\n\n  _proto.parseOperationTypeDefinition = function parseOperationTypeDefinition() {\n    var start = this._lexer.token;\n    var operation = this.parseOperationType();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseNamedType();\n    return {\n      kind: Kind.OPERATION_TYPE_DEFINITION,\n      operation: operation,\n      type: type,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n  ;\n\n  _proto.parseScalarTypeDefinition = function parseScalarTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.SCALAR_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseObjectTypeDefinition = function parseObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n  ;\n\n  _proto.parseImplementsInterfaces = function parseImplementsInterfaces() {\n    var types = [];\n\n    if (this.expectOptionalKeyword('implements')) {\n      // Optional leading ampersand\n      this.expectOptionalToken(TokenKind.AMP);\n\n      do {\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(TokenKind.AMP) || // Legacy support for the SDL?\n      this._options.allowLegacySDLImplementsInterfaces && this.peek(TokenKind.NAME));\n    }\n\n    return types;\n  }\n  /**\n   * FieldsDefinition : { FieldDefinition+ }\n   */\n  ;\n\n  _proto.parseFieldsDefinition = function parseFieldsDefinition() {\n    // Legacy support for the SDL?\n    if (this._options.allowLegacySDLEmptyFields && this.peek(TokenKind.BRACE_L) && this._lexer.lookahead().kind === TokenKind.BRACE_R) {\n      this._lexer.advance();\n\n      this._lexer.advance();\n\n      return [];\n    }\n\n    return this.optionalMany(TokenKind.BRACE_L, this.parseFieldDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n  ;\n\n  _proto.parseFieldDefinition = function parseFieldDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.FIELD_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      type: type,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n  ;\n\n  _proto.parseArgumentDefs = function parseArgumentDefs() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseInputValueDef, TokenKind.PAREN_R);\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseInputValueDef = function parseInputValueDef() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var defaultValue;\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      defaultValue = this.parseValueLiteral(true);\n    }\n\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.INPUT_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      type: type,\n      defaultValue: defaultValue,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseInterfaceTypeDefinition = function parseInterfaceTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.INTERFACE_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n  ;\n\n  _proto.parseUnionTypeDefinition = function parseUnionTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n    return {\n      kind: Kind.UNION_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n  ;\n\n  _proto.parseUnionMemberTypes = function parseUnionMemberTypes() {\n    var types = [];\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      // Optional leading pipe\n      this.expectOptionalToken(TokenKind.PIPE);\n\n      do {\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(TokenKind.PIPE));\n    }\n\n    return types;\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n  ;\n\n  _proto.parseEnumTypeDefinition = function parseEnumTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n    return {\n      kind: Kind.ENUM_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   */\n  ;\n\n  _proto.parseEnumValuesDefinition = function parseEnumValuesDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseEnumValueDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   *\n   * EnumValue : Name\n   */\n  ;\n\n  _proto.parseEnumValueDefinition = function parseEnumValueDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.ENUM_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n  ;\n\n  _proto.parseInputObjectTypeDefinition = function parseInputObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   */\n  ;\n\n  _proto.parseInputFieldsDefinition = function parseInputFieldsDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseInputValueDef, TokenKind.BRACE_R);\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemExtension = function parseTypeSystemExtension() {\n    var keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   */\n  ;\n\n  _proto.parseSchemaExtension = function parseSchemaExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.optionalMany(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCHEMA_EXTENSION,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n  ;\n\n  _proto.parseScalarTypeExtension = function parseScalarTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCALAR_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseObjectTypeExtension = function parseObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.OBJECT_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeExtension :\n   *   - extend interface Name Directives[Const]? FieldsDefinition\n   *   - extend interface Name Directives[Const]\n   */\n  ;\n\n  _proto.parseInterfaceTypeExtension = function parseInterfaceTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INTERFACE_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n  ;\n\n  _proto.parseUnionTypeExtension = function parseUnionTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.UNION_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n  ;\n\n  _proto.parseEnumTypeExtension = function parseEnumTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.ENUM_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n  ;\n\n  _proto.parseInputObjectTypeExtension = function parseInputObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   */\n  ;\n\n  _proto.parseDirectiveDefinition = function parseDirectiveDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(TokenKind.AT);\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    var repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    var locations = this.parseDirectiveLocations();\n    return {\n      kind: Kind.DIRECTIVE_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      repeatable: repeatable,\n      locations: locations,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n  ;\n\n  _proto.parseDirectiveLocations = function parseDirectiveLocations() {\n    // Optional leading pipe\n    this.expectOptionalToken(TokenKind.PIPE);\n    var locations = [];\n\n    do {\n      locations.push(this.parseDirectiveLocation());\n    } while (this.expectOptionalToken(TokenKind.PIPE));\n\n    return locations;\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n  ;\n\n  _proto.parseDirectiveLocation = function parseDirectiveLocation() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n\n    if (DirectiveLocation[name.value] !== undefined) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a location object, used to identify the place in\n   * the source that created a given parsed object.\n   */\n  ;\n\n  _proto.loc = function loc(startToken) {\n    if (!this._options.noLocation) {\n      return new Loc(startToken, this._lexer.lastToken, this._lexer.source);\n    }\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n  ;\n\n  _proto.peek = function peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing\n   * the lexer. Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectToken = function expectToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    throw syntaxError(this._lexer.source, token.start, \"Expected \".concat(kind, \", found \").concat(getTokenDesc(token)));\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing\n   * the lexer. Otherwise, do not change the parser state and return undefined.\n   */\n  ;\n\n  _proto.expectOptionalToken = function expectOptionalToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    return undefined;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectKeyword = function expectKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n    } else {\n      throw syntaxError(this._lexer.source, token.start, \"Expected \\\"\".concat(value, \"\\\", found \").concat(getTokenDesc(token)));\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing\n   * the lexer. Otherwise, do not change the parser state and return \"false\".\n   */\n  ;\n\n  _proto.expectOptionalKeyword = function expectOptionalKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token\n   * is encountered.\n   */\n  ;\n\n  _proto.unexpected = function unexpected(atToken) {\n    var token = atToken || this._lexer.token;\n    return syntaxError(this._lexer.source, token.start, \"Unexpected \".concat(getTokenDesc(token)));\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by\n   * the parseFn. This list begins with a lex token of openKind\n   * and ends with a lex token of closeKind. Advances the parser\n   * to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.any = function any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always\n   * return non-empty list that begins with a lex token of openKind and ends\n   * with a lex token of closeKind. Advances the parser to the next lex token\n   * after the closing token.\n   */\n  ;\n\n  _proto.optionalMany = function optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      var nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by\n   * the parseFn. This list begins with a lex token of openKind\n   * and ends with a lex token of closeKind. Advances the parser\n   * to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.many = function many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  };\n\n  return Parser;\n}();\n\nfunction Loc(startToken, endToken, source) {\n  this.start = startToken.start;\n  this.end = endToken.end;\n  this.startToken = startToken;\n  this.endToken = endToken;\n  this.source = source;\n} // Print a simplified form when appearing in JSON/util.inspect.\n\n\ndefineToJSON(Loc, function () {\n  return {\n    start: this.start,\n    end: this.end\n  };\n});\n/**\n * A helper function to describe a token as a string for debugging\n */\n\nfunction getTokenDesc(token) {\n  var value = token.value;\n  return value ? \"\".concat(token.kind, \" \\\"\").concat(value, \"\\\"\") : token.kind;\n}","require(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.array.map\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.string.trim\");\n\nvar parser = require('graphql/language/parser');\n\nvar parse = parser.parse; // Strip insignificant whitespace\n// Note that this could do a lot more, such as reorder fields etc.\n\nfunction normalize(string) {\n  return string.replace(/[\\s,]+/g, ' ').trim();\n} // A map docString -> graphql document\n\n\nvar docCache = {}; // A map fragmentName -> [normalized source]\n\nvar fragmentSourceMap = {};\n\nfunction cacheKeyFromLoc(loc) {\n  return normalize(loc.source.body.substring(loc.start, loc.end));\n} // For testing.\n\n\nfunction resetCaches() {\n  docCache = {};\n  fragmentSourceMap = {};\n} // Take a unstripped parsed document (query/mutation or even fragment), and\n// check all fragment definitions, checking for name->source uniqueness.\n// We also want to make sure only unique fragments exist in the document.\n\n\nvar printFragmentWarnings = true;\n\nfunction processFragments(ast) {\n  var astFragmentMap = {};\n  var definitions = [];\n\n  for (var i = 0; i < ast.definitions.length; i++) {\n    var fragmentDefinition = ast.definitions[i];\n\n    if (fragmentDefinition.kind === 'FragmentDefinition') {\n      var fragmentName = fragmentDefinition.name.value;\n      var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc); // We know something about this fragment\n\n      if (fragmentSourceMap.hasOwnProperty(fragmentName) && !fragmentSourceMap[fragmentName][sourceKey]) {\n        // this is a problem because the app developer is trying to register another fragment with\n        // the same name as one previously registered. So, we tell them about it.\n        if (printFragmentWarnings) {\n          console.warn(\"Warning: fragment with name \" + fragmentName + \" already exists.\\n\" + \"graphql-tag enforces all fragment names across your application to be unique; read more about\\n\" + \"this in the docs: http://dev.apollodata.com/core/fragments.html#unique-names\");\n        }\n\n        fragmentSourceMap[fragmentName][sourceKey] = true;\n      } else if (!fragmentSourceMap.hasOwnProperty(fragmentName)) {\n        fragmentSourceMap[fragmentName] = {};\n        fragmentSourceMap[fragmentName][sourceKey] = true;\n      }\n\n      if (!astFragmentMap[sourceKey]) {\n        astFragmentMap[sourceKey] = true;\n        definitions.push(fragmentDefinition);\n      }\n    } else {\n      definitions.push(fragmentDefinition);\n    }\n  }\n\n  ast.definitions = definitions;\n  return ast;\n}\n\nfunction disableFragmentWarnings() {\n  printFragmentWarnings = false;\n}\n\nfunction stripLoc(doc, removeLocAtThisLevel) {\n  var docType = Object.prototype.toString.call(doc);\n\n  if (docType === '[object Array]') {\n    return doc.map(function (d) {\n      return stripLoc(d, removeLocAtThisLevel);\n    });\n  }\n\n  if (docType !== '[object Object]') {\n    throw new Error('Unexpected input.');\n  } // We don't want to remove the root loc field so we can use it\n  // for fragment substitution (see below)\n\n\n  if (removeLocAtThisLevel && doc.loc) {\n    delete doc.loc;\n  } // https://github.com/apollographql/graphql-tag/issues/40\n\n\n  if (doc.loc) {\n    delete doc.loc.startToken;\n    delete doc.loc.endToken;\n  }\n\n  var keys = Object.keys(doc);\n  var key;\n  var value;\n  var valueType;\n\n  for (key in keys) {\n    if (keys.hasOwnProperty(key)) {\n      value = doc[keys[key]];\n      valueType = Object.prototype.toString.call(value);\n\n      if (valueType === '[object Object]' || valueType === '[object Array]') {\n        doc[keys[key]] = stripLoc(value, true);\n      }\n    }\n  }\n\n  return doc;\n}\n\nvar experimentalFragmentVariables = false;\n\nfunction parseDocument(doc) {\n  var cacheKey = normalize(doc);\n\n  if (docCache[cacheKey]) {\n    return docCache[cacheKey];\n  }\n\n  var parsed = parse(doc, {\n    experimentalFragmentVariables: experimentalFragmentVariables\n  });\n\n  if (!parsed || parsed.kind !== 'Document') {\n    throw new Error('Not a valid GraphQL document.');\n  } // check that all \"new\" fragments inside the documents are consistent with\n  // existing fragments of the same name\n\n\n  parsed = processFragments(parsed);\n  parsed = stripLoc(parsed, false);\n  docCache[cacheKey] = parsed;\n  return parsed;\n}\n\nfunction enableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = true;\n}\n\nfunction disableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = false;\n} // XXX This should eventually disallow arbitrary string interpolation, like Relay does\n\n\nfunction gql()\n/* arguments */\n{\n  var args = Array.prototype.slice.call(arguments);\n  var literals = args[0]; // We always get literals[0] and then matching post literals for each arg given\n\n  var result = typeof literals === \"string\" ? literals : literals[0];\n\n  for (var i = 1; i < args.length; i++) {\n    if (args[i] && args[i].kind && args[i].kind === 'Document') {\n      result += args[i].loc.source.body;\n    } else {\n      result += args[i];\n    }\n\n    result += literals[i];\n  }\n\n  return parseDocument(result);\n} // Support typescript, which isn't as nice as Babel about default exports\n\n\ngql[\"default\"] = gql;\ngql.resetCaches = resetCaches;\ngql.disableFragmentWarnings = disableFragmentWarnings;\ngql.enableExperimentalFragmentVariables = enableExperimentalFragmentVariables;\ngql.disableExperimentalFragmentVariables = disableExperimentalFragmentVariables;\nmodule.exports = gql;","import \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.map\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es6.function.bind\";\nimport { parser, operationName, DocumentType, getApolloContext } from '@apollo/react-common';\nexport { ApolloConsumer, ApolloProvider, getApolloContext, resetApolloContext } from '@apollo/react-common';\nimport { __extends, __assign } from 'tslib';\nimport React, { useRef, useContext, useReducer, useEffect, useState } from 'react';\nimport { NetworkStatus, ApolloError } from 'apollo-client';\nimport { equal } from '@wry/equality';\nimport { invariant } from 'ts-invariant';\n\nvar OperationData = function () {\n  function OperationData(options, context) {\n    this.isMounted = false;\n    this.previousOptions = {};\n    this.context = {};\n    this.options = {};\n    this.options = options || {};\n    this.context = context || {};\n  }\n\n  OperationData.prototype.getOptions = function () {\n    return this.options;\n  };\n\n  OperationData.prototype.setOptions = function (newOptions, storePrevious) {\n    if (storePrevious === void 0) {\n      storePrevious = false;\n    }\n\n    if (storePrevious && !equal(this.options, newOptions)) {\n      this.previousOptions = this.options;\n    }\n\n    this.options = newOptions;\n  };\n\n  OperationData.prototype.unmount = function () {\n    this.isMounted = false;\n  };\n\n  OperationData.prototype.refreshClient = function () {\n    var client = this.options && this.options.client || this.context && this.context.client;\n    process.env.NODE_ENV === \"production\" ? invariant(!!client, 2) : invariant(!!client, 'Could not find \"client\" in the context or passed in as an option. ' + 'Wrap the root component in an <ApolloProvider>, or pass an ' + 'ApolloClient instance in via options.');\n    var isNew = false;\n\n    if (client !== this.client) {\n      isNew = true;\n      this.client = client;\n      this.cleanup();\n    }\n\n    return {\n      client: this.client,\n      isNew: isNew\n    };\n  };\n\n  OperationData.prototype.verifyDocumentType = function (document, type) {\n    var operation = parser(document);\n    var requiredOperationName = operationName(type);\n    var usedOperationName = operationName(operation.type);\n    process.env.NODE_ENV === \"production\" ? invariant(operation.type === type, 3) : invariant(operation.type === type, \"Running a \" + requiredOperationName + \" requires a graphql \" + (requiredOperationName + \", but a \" + usedOperationName + \" was used instead.\"));\n  };\n\n  return OperationData;\n}();\n\nvar QueryData = function (_super) {\n  __extends(QueryData, _super);\n\n  function QueryData(_a) {\n    var options = _a.options,\n        context = _a.context,\n        onNewData = _a.onNewData;\n\n    var _this = _super.call(this, options, context) || this;\n\n    _this.previousData = {};\n    _this.currentObservable = {};\n    _this.runLazy = false;\n\n    _this.runLazyQuery = function (options) {\n      _this.cleanup();\n\n      _this.runLazy = true;\n      _this.lazyOptions = options;\n\n      _this.onNewData();\n    };\n\n    _this.getExecuteResult = function () {\n      var result = _this.getQueryResult();\n\n      _this.startQuerySubscription();\n\n      return result;\n    };\n\n    _this.obsRefetch = function (variables) {\n      return _this.currentObservable.query.refetch(variables);\n    };\n\n    _this.obsFetchMore = function (fetchMoreOptions) {\n      return _this.currentObservable.query.fetchMore(fetchMoreOptions);\n    };\n\n    _this.obsUpdateQuery = function (mapFn) {\n      return _this.currentObservable.query.updateQuery(mapFn);\n    };\n\n    _this.obsStartPolling = function (pollInterval) {\n      _this.currentObservable && _this.currentObservable.query && _this.currentObservable.query.startPolling(pollInterval);\n    };\n\n    _this.obsStopPolling = function () {\n      _this.currentObservable && _this.currentObservable.query && _this.currentObservable.query.stopPolling();\n    };\n\n    _this.obsSubscribeToMore = function (options) {\n      return _this.currentObservable.query.subscribeToMore(options);\n    };\n\n    _this.onNewData = onNewData;\n    return _this;\n  }\n\n  QueryData.prototype.execute = function () {\n    this.refreshClient();\n\n    var _a = this.getOptions(),\n        skip = _a.skip,\n        query = _a.query;\n\n    if (skip || query !== this.previousData.query) {\n      this.removeQuerySubscription();\n      this.previousData.query = query;\n    }\n\n    this.updateObservableQuery();\n    if (this.isMounted) this.startQuerySubscription();\n    return this.getExecuteSsrResult() || this.getExecuteResult();\n  };\n\n  QueryData.prototype.executeLazy = function () {\n    return !this.runLazy ? [this.runLazyQuery, {\n      loading: false,\n      networkStatus: NetworkStatus.ready,\n      called: false,\n      data: undefined\n    }] : [this.runLazyQuery, this.execute()];\n  };\n\n  QueryData.prototype.fetchData = function () {\n    var options = this.getOptions();\n    if (options.skip || options.ssr === false) return false;\n    var obs = this.currentObservable.query;\n    var currentResult = obs.getCurrentResult();\n    return currentResult.loading ? obs.result() : false;\n  };\n\n  QueryData.prototype.afterExecute = function (_a) {\n    var _b = (_a === void 0 ? {} : _a).lazy,\n        lazy = _b === void 0 ? false : _b;\n    this.isMounted = true;\n\n    if (!lazy || this.runLazy) {\n      this.handleErrorOrCompleted();\n    }\n\n    this.previousOptions = this.getOptions();\n    return this.unmount.bind(this);\n  };\n\n  QueryData.prototype.cleanup = function () {\n    this.removeQuerySubscription();\n    delete this.currentObservable.query;\n    delete this.previousData.result;\n  };\n\n  QueryData.prototype.getOptions = function () {\n    var options = _super.prototype.getOptions.call(this);\n\n    if (this.lazyOptions) {\n      options.variables = __assign(__assign({}, options.variables), this.lazyOptions.variables);\n      options.context = __assign(__assign({}, options.context), this.lazyOptions.context);\n    }\n\n    if (this.runLazy) {\n      delete options.skip;\n    }\n\n    return options;\n  };\n\n  QueryData.prototype.ssrInitiated = function () {\n    return this.context && this.context.renderPromises;\n  };\n\n  QueryData.prototype.getExecuteSsrResult = function () {\n    var ssrDisabled = this.getOptions().ssr === false;\n    var fetchDisabled = this.refreshClient().client.disableNetworkFetches;\n\n    var ssrLoading = __assign({\n      loading: true,\n      networkStatus: NetworkStatus.loading,\n      called: true,\n      data: undefined,\n      stale: false,\n      client: this.client\n    }, this.observableQueryFields());\n\n    if (ssrDisabled && (this.ssrInitiated() || fetchDisabled)) {\n      this.previousData.result = ssrLoading;\n      return ssrLoading;\n    }\n\n    var result;\n\n    if (this.ssrInitiated()) {\n      result = this.context.renderPromises.addQueryPromise(this, this.getExecuteResult) || ssrLoading;\n    }\n\n    return result;\n  };\n\n  QueryData.prototype.prepareObservableQueryOptions = function () {\n    var options = this.getOptions();\n    this.verifyDocumentType(options.query, DocumentType.Query);\n    var displayName = options.displayName || 'Query';\n\n    if (this.ssrInitiated() && (options.fetchPolicy === 'network-only' || options.fetchPolicy === 'cache-and-network')) {\n      options.fetchPolicy = 'cache-first';\n    }\n\n    return __assign(__assign({}, options), {\n      displayName: displayName,\n      context: options.context,\n      metadata: {\n        reactComponent: {\n          displayName: displayName\n        }\n      }\n    });\n  };\n\n  QueryData.prototype.initializeObservableQuery = function () {\n    var _a, _b;\n\n    if (this.ssrInitiated()) {\n      this.currentObservable.query = this.context.renderPromises.getSSRObservable(this.getOptions());\n    }\n\n    if (!this.currentObservable.query) {\n      var observableQueryOptions = this.prepareObservableQueryOptions();\n      this.previousData.observableQueryOptions = __assign(__assign({}, observableQueryOptions), {\n        children: null\n      });\n      this.currentObservable.query = this.refreshClient().client.watchQuery(__assign({}, observableQueryOptions));\n\n      if (this.ssrInitiated()) {\n        (_b = (_a = this.context) === null || _a === void 0 ? void 0 : _a.renderPromises) === null || _b === void 0 ? void 0 : _b.registerSSRObservable(this.currentObservable.query, observableQueryOptions);\n      }\n    }\n  };\n\n  QueryData.prototype.updateObservableQuery = function () {\n    if (!this.currentObservable.query) {\n      this.initializeObservableQuery();\n      return;\n    }\n\n    var newObservableQueryOptions = __assign(__assign({}, this.prepareObservableQueryOptions()), {\n      children: null\n    });\n\n    if (!equal(newObservableQueryOptions, this.previousData.observableQueryOptions)) {\n      this.previousData.observableQueryOptions = newObservableQueryOptions;\n      this.currentObservable.query.setOptions(newObservableQueryOptions)[\"catch\"](function () {});\n    }\n  };\n\n  QueryData.prototype.startQuerySubscription = function () {\n    var _this = this;\n\n    if (this.currentObservable.subscription || this.getOptions().skip) return;\n    var obsQuery = this.currentObservable.query;\n    this.currentObservable.subscription = obsQuery.subscribe({\n      next: function next(_a) {\n        var loading = _a.loading,\n            networkStatus = _a.networkStatus,\n            data = _a.data;\n        var previousResult = _this.previousData.result;\n\n        if (previousResult && previousResult.loading === loading && previousResult.networkStatus === networkStatus && equal(previousResult.data, data)) {\n          return;\n        }\n\n        _this.onNewData();\n      },\n      error: function error(_error) {\n        _this.resubscribeToQuery();\n\n        if (!_error.hasOwnProperty('graphQLErrors')) throw _error;\n        var previousResult = _this.previousData.result;\n\n        if (previousResult && previousResult.loading || !equal(_error, _this.previousData.error)) {\n          _this.previousData.error = _error;\n\n          _this.onNewData();\n        }\n      }\n    });\n  };\n\n  QueryData.prototype.resubscribeToQuery = function () {\n    this.removeQuerySubscription();\n    var lastError = this.currentObservable.query.getLastError();\n    var lastResult = this.currentObservable.query.getLastResult();\n    this.currentObservable.query.resetLastResults();\n    this.startQuerySubscription();\n    Object.assign(this.currentObservable.query, {\n      lastError: lastError,\n      lastResult: lastResult\n    });\n  };\n\n  QueryData.prototype.getQueryResult = function () {\n    var result = this.observableQueryFields();\n    var options = this.getOptions();\n\n    if (options.skip) {\n      result = __assign(__assign({}, result), {\n        data: undefined,\n        error: undefined,\n        loading: false,\n        called: true\n      });\n    } else {\n      var currentResult = this.currentObservable.query.getCurrentResult();\n      var loading = currentResult.loading,\n          partial = currentResult.partial,\n          networkStatus = currentResult.networkStatus,\n          errors = currentResult.errors;\n      var error = currentResult.error,\n          data = currentResult.data;\n\n      if (errors && errors.length > 0) {\n        error = new ApolloError({\n          graphQLErrors: errors\n        });\n      }\n\n      result = __assign(__assign({}, result), {\n        loading: loading,\n        networkStatus: networkStatus,\n        error: error,\n        called: true\n      });\n\n      if (loading) {\n        var previousData = this.previousData.result && this.previousData.result.data;\n        result.data = previousData && data ? __assign(__assign({}, previousData), data) : previousData || data;\n      } else if (error) {\n        Object.assign(result, {\n          data: (this.currentObservable.query.getLastResult() || {}).data\n        });\n      } else {\n        var fetchPolicy = this.currentObservable.query.options.fetchPolicy;\n        var partialRefetch = options.partialRefetch;\n\n        if (partialRefetch && !data && partial && fetchPolicy !== 'cache-only') {\n          Object.assign(result, {\n            loading: true,\n            networkStatus: NetworkStatus.loading\n          });\n          result.refetch();\n          return result;\n        }\n\n        result.data = data;\n      }\n    }\n\n    result.client = this.client;\n    this.previousData.loading = this.previousData.result && this.previousData.result.loading || false;\n    this.previousData.result = result;\n    this.currentObservable.query && this.currentObservable.query.resetQueryStoreErrors();\n    return result;\n  };\n\n  QueryData.prototype.handleErrorOrCompleted = function () {\n    var obsQuery = this.currentObservable.query;\n    if (!obsQuery || !this.previousData.result) return;\n    var _a = this.previousData.result,\n        data = _a.data,\n        loading = _a.loading,\n        error = _a.error;\n\n    if (!loading) {\n      var _b = this.getOptions(),\n          query = _b.query,\n          variables = _b.variables,\n          onCompleted = _b.onCompleted,\n          onError = _b.onError;\n\n      if (this.previousOptions && !this.previousData.loading && equal(this.previousOptions.query, query) && equal(this.previousOptions.variables, variables)) {\n        return;\n      }\n\n      if (onCompleted && !error) {\n        onCompleted(data);\n      } else if (onError && error) {\n        onError(error);\n      }\n    }\n  };\n\n  QueryData.prototype.removeQuerySubscription = function () {\n    if (this.currentObservable.subscription) {\n      this.currentObservable.subscription.unsubscribe();\n      delete this.currentObservable.subscription;\n    }\n  };\n\n  QueryData.prototype.observableQueryFields = function () {\n    var observable = this.currentObservable.query;\n    return {\n      variables: observable.variables,\n      refetch: this.obsRefetch,\n      fetchMore: this.obsFetchMore,\n      updateQuery: this.obsUpdateQuery,\n      startPolling: this.obsStartPolling,\n      stopPolling: this.obsStopPolling,\n      subscribeToMore: this.obsSubscribeToMore\n    };\n  };\n\n  return QueryData;\n}(OperationData);\n\nfunction useDeepMemo(memoFn, key) {\n  var ref = useRef();\n\n  if (!ref.current || !equal(key, ref.current.key)) {\n    ref.current = {\n      key: key,\n      value: memoFn()\n    };\n  }\n\n  return ref.current.value;\n}\n\nfunction useBaseQuery(query, options, lazy) {\n  if (lazy === void 0) {\n    lazy = false;\n  }\n\n  var context = useContext(getApolloContext());\n\n  var _a = useReducer(function (x) {\n    return x + 1;\n  }, 0),\n      tick = _a[0],\n      forceUpdate = _a[1];\n\n  var updatedOptions = options ? __assign(__assign({}, options), {\n    query: query\n  }) : {\n    query: query\n  };\n  var queryDataRef = useRef();\n  var queryData = queryDataRef.current || new QueryData({\n    options: updatedOptions,\n    context: context,\n    onNewData: function onNewData() {\n      if (!queryData.ssrInitiated()) {\n        Promise.resolve().then(forceUpdate);\n      } else {\n        forceUpdate();\n      }\n    }\n  });\n  queryData.setOptions(updatedOptions);\n  queryData.context = context;\n\n  if (queryData.ssrInitiated() && !queryDataRef.current) {\n    queryDataRef.current = queryData;\n  }\n\n  var memo = {\n    options: __assign(__assign({}, updatedOptions), {\n      onError: undefined,\n      onCompleted: undefined\n    }),\n    context: context,\n    tick: tick\n  };\n  var result = useDeepMemo(function () {\n    return lazy ? queryData.executeLazy() : queryData.execute();\n  }, memo);\n  var queryResult = lazy ? result[1] : result;\n  useEffect(function () {\n    if (!queryDataRef.current) {\n      queryDataRef.current = queryData;\n    }\n\n    return function () {\n      return queryData.cleanup();\n    };\n  }, []);\n  useEffect(function () {\n    return queryData.afterExecute({\n      lazy: lazy\n    });\n  }, [queryResult.loading, queryResult.networkStatus, queryResult.error, queryResult.data]);\n  return result;\n}\n\nfunction useQuery(query, options) {\n  return useBaseQuery(query, options, false);\n}\n\nfunction useLazyQuery(query, options) {\n  return useBaseQuery(query, options, true);\n}\n\nvar MutationData = function (_super) {\n  __extends(MutationData, _super);\n\n  function MutationData(_a) {\n    var options = _a.options,\n        context = _a.context,\n        result = _a.result,\n        setResult = _a.setResult;\n\n    var _this = _super.call(this, options, context) || this;\n\n    _this.runMutation = function (mutationFunctionOptions) {\n      if (mutationFunctionOptions === void 0) {\n        mutationFunctionOptions = {};\n      }\n\n      _this.onMutationStart();\n\n      var mutationId = _this.generateNewMutationId();\n\n      return _this.mutate(mutationFunctionOptions).then(function (response) {\n        _this.onMutationCompleted(response, mutationId);\n\n        return response;\n      })[\"catch\"](function (error) {\n        _this.onMutationError(error, mutationId);\n\n        if (!_this.getOptions().onError) throw error;\n      });\n    };\n\n    _this.verifyDocumentType(options.mutation, DocumentType.Mutation);\n\n    _this.result = result;\n    _this.setResult = setResult;\n    _this.mostRecentMutationId = 0;\n    return _this;\n  }\n\n  MutationData.prototype.execute = function (result) {\n    this.isMounted = true;\n    this.verifyDocumentType(this.getOptions().mutation, DocumentType.Mutation);\n    result.client = this.refreshClient().client;\n    return [this.runMutation, result];\n  };\n\n  MutationData.prototype.afterExecute = function () {\n    this.isMounted = true;\n    return this.unmount.bind(this);\n  };\n\n  MutationData.prototype.cleanup = function () {};\n\n  MutationData.prototype.mutate = function (mutationFunctionOptions) {\n    var _a = this.getOptions(),\n        mutation = _a.mutation,\n        variables = _a.variables,\n        optimisticResponse = _a.optimisticResponse,\n        update = _a.update,\n        _b = _a.context,\n        mutationContext = _b === void 0 ? {} : _b,\n        _c = _a.awaitRefetchQueries,\n        awaitRefetchQueries = _c === void 0 ? false : _c,\n        fetchPolicy = _a.fetchPolicy;\n\n    var mutateOptions = __assign({}, mutationFunctionOptions);\n\n    var mutateVariables = Object.assign({}, variables, mutateOptions.variables);\n    delete mutateOptions.variables;\n    return this.refreshClient().client.mutate(__assign({\n      mutation: mutation,\n      optimisticResponse: optimisticResponse,\n      refetchQueries: mutateOptions.refetchQueries || this.getOptions().refetchQueries,\n      awaitRefetchQueries: awaitRefetchQueries,\n      update: update,\n      context: mutationContext,\n      fetchPolicy: fetchPolicy,\n      variables: mutateVariables\n    }, mutateOptions));\n  };\n\n  MutationData.prototype.onMutationStart = function () {\n    if (!this.result.loading && !this.getOptions().ignoreResults) {\n      this.updateResult({\n        loading: true,\n        error: undefined,\n        data: undefined,\n        called: true\n      });\n    }\n  };\n\n  MutationData.prototype.onMutationCompleted = function (response, mutationId) {\n    var _a = this.getOptions(),\n        onCompleted = _a.onCompleted,\n        ignoreResults = _a.ignoreResults;\n\n    var data = response.data,\n        errors = response.errors;\n    var error = errors && errors.length > 0 ? new ApolloError({\n      graphQLErrors: errors\n    }) : undefined;\n\n    var callOncomplete = function callOncomplete() {\n      return onCompleted ? onCompleted(data) : null;\n    };\n\n    if (this.isMostRecentMutation(mutationId) && !ignoreResults) {\n      this.updateResult({\n        called: true,\n        loading: false,\n        data: data,\n        error: error\n      });\n    }\n\n    callOncomplete();\n  };\n\n  MutationData.prototype.onMutationError = function (error, mutationId) {\n    var onError = this.getOptions().onError;\n\n    if (this.isMostRecentMutation(mutationId)) {\n      this.updateResult({\n        loading: false,\n        error: error,\n        data: undefined,\n        called: true\n      });\n    }\n\n    if (onError) {\n      onError(error);\n    }\n  };\n\n  MutationData.prototype.generateNewMutationId = function () {\n    return ++this.mostRecentMutationId;\n  };\n\n  MutationData.prototype.isMostRecentMutation = function (mutationId) {\n    return this.mostRecentMutationId === mutationId;\n  };\n\n  MutationData.prototype.updateResult = function (result) {\n    if (this.isMounted && (!this.previousResult || !equal(this.previousResult, result))) {\n      this.setResult(result);\n      this.previousResult = result;\n    }\n  };\n\n  return MutationData;\n}(OperationData);\n\nfunction useMutation(mutation, options) {\n  var context = useContext(getApolloContext());\n\n  var _a = useState({\n    called: false,\n    loading: false\n  }),\n      result = _a[0],\n      setResult = _a[1];\n\n  var updatedOptions = options ? __assign(__assign({}, options), {\n    mutation: mutation\n  }) : {\n    mutation: mutation\n  };\n  var mutationDataRef = useRef();\n\n  function getMutationDataRef() {\n    if (!mutationDataRef.current) {\n      mutationDataRef.current = new MutationData({\n        options: updatedOptions,\n        context: context,\n        result: result,\n        setResult: setResult\n      });\n    }\n\n    return mutationDataRef.current;\n  }\n\n  var mutationData = getMutationDataRef();\n  mutationData.setOptions(updatedOptions);\n  mutationData.context = context;\n  useEffect(function () {\n    return mutationData.afterExecute();\n  });\n  return mutationData.execute(result);\n}\n\nvar SubscriptionData = function (_super) {\n  __extends(SubscriptionData, _super);\n\n  function SubscriptionData(_a) {\n    var options = _a.options,\n        context = _a.context,\n        setResult = _a.setResult;\n\n    var _this = _super.call(this, options, context) || this;\n\n    _this.currentObservable = {};\n    _this.setResult = setResult;\n\n    _this.initialize(options);\n\n    return _this;\n  }\n\n  SubscriptionData.prototype.execute = function (result) {\n    if (this.getOptions().skip === true) {\n      this.cleanup();\n      return {\n        loading: false,\n        error: undefined,\n        data: undefined,\n        variables: this.getOptions().variables\n      };\n    }\n\n    var currentResult = result;\n\n    if (this.refreshClient().isNew) {\n      currentResult = this.getLoadingResult();\n    }\n\n    var shouldResubscribe = this.getOptions().shouldResubscribe;\n\n    if (typeof shouldResubscribe === 'function') {\n      shouldResubscribe = !!shouldResubscribe(this.getOptions());\n    }\n\n    if (shouldResubscribe !== false && this.previousOptions && Object.keys(this.previousOptions).length > 0 && (this.previousOptions.subscription !== this.getOptions().subscription || !equal(this.previousOptions.variables, this.getOptions().variables) || this.previousOptions.skip !== this.getOptions().skip)) {\n      this.cleanup();\n      currentResult = this.getLoadingResult();\n    }\n\n    this.initialize(this.getOptions());\n    this.startSubscription();\n    this.previousOptions = this.getOptions();\n    return __assign(__assign({}, currentResult), {\n      variables: this.getOptions().variables\n    });\n  };\n\n  SubscriptionData.prototype.afterExecute = function () {\n    this.isMounted = true;\n  };\n\n  SubscriptionData.prototype.cleanup = function () {\n    this.endSubscription();\n    delete this.currentObservable.query;\n  };\n\n  SubscriptionData.prototype.initialize = function (options) {\n    if (this.currentObservable.query || this.getOptions().skip === true) return;\n    this.currentObservable.query = this.refreshClient().client.subscribe({\n      query: options.subscription,\n      variables: options.variables,\n      fetchPolicy: options.fetchPolicy\n    });\n  };\n\n  SubscriptionData.prototype.startSubscription = function () {\n    if (this.currentObservable.subscription) return;\n    this.currentObservable.subscription = this.currentObservable.query.subscribe({\n      next: this.updateCurrentData.bind(this),\n      error: this.updateError.bind(this),\n      complete: this.completeSubscription.bind(this)\n    });\n  };\n\n  SubscriptionData.prototype.getLoadingResult = function () {\n    return {\n      loading: true,\n      error: undefined,\n      data: undefined\n    };\n  };\n\n  SubscriptionData.prototype.updateResult = function (result) {\n    if (this.isMounted) {\n      this.setResult(result);\n    }\n  };\n\n  SubscriptionData.prototype.updateCurrentData = function (result) {\n    var onSubscriptionData = this.getOptions().onSubscriptionData;\n    this.updateResult({\n      data: result.data,\n      loading: false,\n      error: undefined\n    });\n\n    if (onSubscriptionData) {\n      onSubscriptionData({\n        client: this.refreshClient().client,\n        subscriptionData: result\n      });\n    }\n  };\n\n  SubscriptionData.prototype.updateError = function (error) {\n    this.updateResult({\n      error: error,\n      loading: false\n    });\n  };\n\n  SubscriptionData.prototype.completeSubscription = function () {\n    var onSubscriptionComplete = this.getOptions().onSubscriptionComplete;\n    if (onSubscriptionComplete) onSubscriptionComplete();\n    this.endSubscription();\n  };\n\n  SubscriptionData.prototype.endSubscription = function () {\n    if (this.currentObservable.subscription) {\n      this.currentObservable.subscription.unsubscribe();\n      delete this.currentObservable.subscription;\n    }\n  };\n\n  return SubscriptionData;\n}(OperationData);\n\nfunction useSubscription(subscription, options) {\n  var context = useContext(getApolloContext());\n  var updatedOptions = options ? __assign(__assign({}, options), {\n    subscription: subscription\n  }) : {\n    subscription: subscription\n  };\n\n  var _a = useState({\n    loading: !updatedOptions.skip,\n    error: undefined,\n    data: undefined\n  }),\n      result = _a[0],\n      setResult = _a[1];\n\n  var subscriptionDataRef = useRef();\n\n  function getSubscriptionDataRef() {\n    if (!subscriptionDataRef.current) {\n      subscriptionDataRef.current = new SubscriptionData({\n        options: updatedOptions,\n        context: context,\n        setResult: setResult\n      });\n    }\n\n    return subscriptionDataRef.current;\n  }\n\n  var subscriptionData = getSubscriptionDataRef();\n  subscriptionData.setOptions(updatedOptions, true);\n  subscriptionData.context = context;\n  useEffect(function () {\n    return subscriptionData.afterExecute();\n  });\n  useEffect(function () {\n    return subscriptionData.cleanup.bind(subscriptionData);\n  }, []);\n  return subscriptionData.execute(result);\n}\n\nfunction useApolloClient() {\n  var client = React.useContext(getApolloContext()).client;\n  process.env.NODE_ENV === \"production\" ? invariant(client, 1) : invariant(client, 'No Apollo Client instance can be found. Please ensure that you ' + 'have called `ApolloProvider` higher up in your tree.');\n  return client;\n}\n\nfunction makeDefaultQueryInfo() {\n  return {\n    seen: false,\n    observable: null\n  };\n}\n\nvar RenderPromises = function () {\n  function RenderPromises() {\n    this.queryPromises = new Map();\n    this.queryInfoTrie = new Map();\n  }\n\n  RenderPromises.prototype.registerSSRObservable = function (observable, props) {\n    this.lookupQueryInfo(props).observable = observable;\n  };\n\n  RenderPromises.prototype.getSSRObservable = function (props) {\n    return this.lookupQueryInfo(props).observable;\n  };\n\n  RenderPromises.prototype.addQueryPromise = function (queryInstance, finish) {\n    var info = this.lookupQueryInfo(queryInstance.getOptions());\n\n    if (!info.seen) {\n      this.queryPromises.set(queryInstance.getOptions(), new Promise(function (resolve) {\n        resolve(queryInstance.fetchData());\n      }));\n      return null;\n    }\n\n    return finish();\n  };\n\n  RenderPromises.prototype.hasPromises = function () {\n    return this.queryPromises.size > 0;\n  };\n\n  RenderPromises.prototype.consumeAndAwaitPromises = function () {\n    var _this = this;\n\n    var promises = [];\n    this.queryPromises.forEach(function (promise, queryInstance) {\n      _this.lookupQueryInfo(queryInstance).seen = true;\n      promises.push(promise);\n    });\n    this.queryPromises.clear();\n    return Promise.all(promises);\n  };\n\n  RenderPromises.prototype.lookupQueryInfo = function (props) {\n    var queryInfoTrie = this.queryInfoTrie;\n    var query = props.query,\n        variables = props.variables;\n    var varMap = queryInfoTrie.get(query) || new Map();\n    if (!queryInfoTrie.has(query)) queryInfoTrie.set(query, varMap);\n    var variablesString = JSON.stringify(variables);\n    var info = varMap.get(variablesString) || makeDefaultQueryInfo();\n    if (!varMap.has(variablesString)) varMap.set(variablesString, info);\n    return info;\n  };\n\n  return RenderPromises;\n}();\n\nexport { RenderPromises, useApolloClient, useLazyQuery, useMutation, useQuery, useSubscription };"],"sourceRoot":""}