{"version":3,"sources":["webpack:///./src/templates/section-news.js"],"names":["GET_UPDATE_ARTICLES","gql","query","SectionNews","props","useState","countArticles","setCountArticles","Meta","Card","news","data","useSubscription","loading","error","message","articles_categories","categories","find","item","slug","gutter","slice","map","el","className","xs","md","lg","xl","key","article","id","hoverable","cover","alt","src","to","title","description","teaser","style","textAlign","length","onClick","type"],"mappings":"qkBAOA,IAAMA,EAAsBC,IAAH,KAgBZC,EAAK,aA2DHC,UAzCK,SAACC,GAAW,IAAD,EACeC,mBAAS,GAA7CC,EADqB,KACNC,EADM,KAErBC,EAASC,IAATD,KACAE,EAASN,EAAMO,KAAfD,KAHqB,EAIIE,YAAgBZ,GAAzCa,EAJqB,EAIrBA,QAASC,EAJY,EAIZA,MAAOH,EAJK,EAILA,KAExB,GAAIE,EAAS,MAAO,aACpB,GAAIC,EAAO,MAAM,UAAWA,EAAMC,QAPL,IASrBC,EAAwBL,EAAKM,WAAWC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,OAASV,EAAKO,WAAWG,QAAnFJ,oBAIR,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKK,OAAQ,CAAC,GAAI,KAEdL,EAAoBM,MAAM,EAAGhB,GAAeiB,KAAI,SAAAC,GAAE,OAChD,kBAAC,IAAD,CAAKC,UAAU,aAAaC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,IAAKN,EAAGO,QAAQC,IACxE,kBAAC,IAAD,CACEC,WAAS,EACTC,MAAO,yBAAKC,IAAI,UAAUC,IAAI,gEAE9B,kBAAC,OAAD,CAAMC,GAAE,IAAMb,EAAGO,QAAQX,MAASI,EAAGO,QAAQO,OAC7C,kBAAC9B,EAAD,CAAM+B,YAAaf,EAAGO,QAAQS,eAMxC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKf,UAAU,aAAaC,GAAI,GAAIe,MAAO,CAAEC,UAAW,WAEpD1B,EAAoB2B,OAASrC,EAAgB,kBAAC,IAAD,CAAQsC,QAtBhD,kBAAMrC,EAAiBD,EAAgB,IAsB0BuC,KAAK,WAA9B,iBAAiE","file":"component---src-templates-section-news-js-4d277f0fb8ebb23edb35.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { graphql, Link } from \"gatsby\"\r\nimport gql from 'graphql-tag'\r\nimport { useSubscription  } from \"@apollo/react-hooks\";\r\nimport Layout from \"../components/layout\"\r\nimport { Card, Row, Col, Button } from 'antd';\r\n\r\nconst GET_UPDATE_ARTICLES = gql`\r\n  subscription {\r\n    categories {\r\n      slug\r\n      articles_categories {\r\n        article {\r\n          id\r\n          title\r\n          teaser\r\n          slug\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const query =  graphql`\r\n  query ($id: Int!) {\r\n    news {\r\n      categories: categories_by_pk(id: $id) {\r\n        slug\r\n        articles_categories {\r\n          article {\r\n            id\r\n            title\r\n            teaser\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst SectionNews = (props) => {\r\n  const [ countArticles, setCountArticles ] = useState(8)\r\n  const { Meta } = Card;\r\n  const { news } = props.data\r\n  const { loading, error, data } = useSubscription(GET_UPDATE_ARTICLES)\r\n\r\n  if (loading) return 'Loading...';\r\n  if (error) return `Error! ${error.message}`;\r\n\r\n  const { articles_categories } = data.categories.find(item => item.slug === news.categories.slug)\r\n\r\n  const onLoad = () => setCountArticles(countArticles + 4)\r\n\r\n  return (\r\n    <Layout>\r\n      <Row gutter={[16, 24]}>\r\n        {\r\n          articles_categories.slice(0, countArticles).map(el => (\r\n            <Col className=\"gutter-row\" xs={24} md={12} lg={8} xl={6} key={el.article.id}>\r\n              <Card\r\n                hoverable\r\n                cover={<img alt=\"example\" src=\"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\"/>}\r\n              >\r\n                <Link to={`/${el.article.slug}`}>{el.article.title}</Link>\r\n                <Meta description={el.article.teaser} />\r\n              </Card>\r\n            </Col>\r\n          ))\r\n        }\r\n      </Row>\r\n      <Row>\r\n        <Col className=\"gutter-row\" xs={24} style={{ textAlign: 'center' }}>\r\n          {\r\n            articles_categories.length > countArticles ? <Button onClick={onLoad} type=\"primary\">Загрузить ещё</Button> : null\r\n          }\r\n        </Col>\r\n      </Row>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default SectionNews;\r\n"],"sourceRoot":""}