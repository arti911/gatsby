{"version":3,"sources":["webpack:///./src/pages/404.js"],"names":["pageArticle","gql","NotFoundPage","props","slug","location","pathname","split","useQuery","variables","length","loading","data","console","log","to"],"mappings":"gbAMA,IAAMA,EAAcC,IAAH,KAqCFC,UA3BM,SAACC,GACpB,IAAMC,EAAOD,EAAME,SAASC,SAASC,MAAM,KADb,EAGJC,YAASR,EAAa,CAC9CS,UAAW,CACT,KAAQL,EAAKA,EAAKM,OAAS,MAFvBC,EAHsB,EAGtBA,QAASC,EAHa,EAGbA,KAMjB,OAAID,EAAgB,aACpBE,QAAQC,IAAIV,EAAKA,EAAKM,OAAS,IAC/BG,QAAQC,IAAI,MAAOF,GAGjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMG,GAAG,KAAT,WACA","file":"component---src-pages-404-js-d67cb540a5ba934f5ca9.js","sourcesContent":["import React from \"react\"\r\nimport Layout from \"../components/layout\"\r\nimport { Link } from \"gatsby\"\r\nimport gql from 'graphql-tag'\r\nimport { useQuery  } from \"@apollo/react-hooks\";\r\n\r\nconst pageArticle = gql`\r\n  query addArticle($slug: String!) {\r\n    articles (where: {slug: {_eq: $slug}}) {\r\n      title\r\n      body\r\n      slug\r\n    }\r\n  }\r\n`\r\n\r\nconst NotFoundPage = (props) => {\r\n  const slug = props.location.pathname.split(\"/\")\r\n\r\n  const { loading, data } = useQuery(pageArticle, {\r\n    variables: {\r\n      \"slug\": slug[slug.length - 1]\r\n    }\r\n  })\r\n  \r\n  if (loading) return 'Loading..'\r\n  console.log(slug[slug.length - 1])\r\n  console.log('gql', data)\r\n\r\n  return (\r\n    <Layout>\r\n      <Link to=\"/\">&larr; Назад</Link>\r\n      <h1>Not Found Page</h1>\r\n      {/* {\r\n        data.articles.map(item => (\r\n            <pre key={item.slug}>{JSON.stringify(item, null, 1)}</pre>\r\n          )\r\n        )\r\n      } */}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default NotFoundPage\r\n"],"sourceRoot":""}